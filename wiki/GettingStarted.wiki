= Installation = 
== Maven users ==
Add the following dependency to your pom.xml:

=== REST Assured === 
Includes JsonPath and XmlPath

{{{
<dependency>
      <groupId>com.jayway.restassured</groupId>
      <artifactId>rest-assured</artifactId>
      <version>2.3.4</version>
      <scope>test</scope>
</dependency>
}}}

Notes 
  # You should place rest-assured before JUnit in your pom.xml dependency declaration in order to make sure that the correct version of Hamcrest is used. 
  # REST Assured includes JsonPath and XmlPath as transitive dependencies

=== JsonPath ===
Standalone JsonPath (included if you depend on the `rest-assured` artifact). Makes it easy to parse JSON documents. Note that this JsonPath implementation uses <a href="http://groovy.codehaus.org/GPath">Groovy's GPath</a> and is not to be confused with Jayway's other <a href="https://github.com/jayway/JsonPath">JsonPath</a> implementation.
{{{
<dependency>
      <groupId>com.jayway.restassured</groupId>
      <artifactId>json-path</artifactId>
      <version>2.3.4</version>
</dependency>
}}}

=== XmlPath ===
Stand-alone XmlPath (included if you depend on the `rest-assured` artifact). Makes it easy to parse XML documents.
{{{
<dependency>
      <groupId>com.jayway.restassured</groupId>
      <artifactId>xml-path</artifactId>
      <version>2.3.4</version>
</dependency>
}}}

=== JSON Schema Validation ===
If you want to validate that a JSON response conforms to a [http://json-schema.org/ Json Schema] you can use the `json-schema-validator` module:
{{{
<dependency>
      <groupId>com.jayway.restassured</groupId>
      <artifactId>json-schema-validator</artifactId>
      <version>2.3.4</version>
      <scope>test</scope>
</dependency>
}}}

Refer to the [https://code.google.com/p/rest-assured/wiki/Usage#JSON_Schema_validation documentation] for more info.

=== Spring Mock Mvc ===
If you're using Spring Mvc you can now unit test your controllers using the [http://rest-assured.googlecode.com/svn/tags/2.3.4/apidocs/com/jayway/restassured/module/mockmvc/RestAssuredMockMvc.html RestAssuredMockMvc] API in the [Usage#Spring_Mock_Mvc_Module spring-mock-mvc] module. For this to work you need to depend on the `spring-mock-mvc` module:
{{{
<dependency>
      <groupId>com.jayway.restassured</groupId>
      <artifactId>spring-mock-mvc</artifactId>
      <version>2.3.4</version>
      <scope>test</scope>
</dependency>
}}}

== Non-maven users ==
Download [http://dl.bintray.com/johanhaleby/generic/rest-assured-2.3.4-dist.zip REST Assured] and [http://dl.bintray.com/johanhaleby/generic/json-schema-validator-2.3.4-dist.zip Json Schema Validator] (optional). You can also download [http://dl.bintray.com/johanhaleby/generic/xml-path-2.3.4-dist.zip XmlPath] and/or [http://dl.bintray.com/johanhaleby/generic/json-path-2.3.4-dist.zip JsonPath] separately if you don't need REST Assured. If you're using Spring Mvc then you can download the [http://dl.bintray.com/johanhaleby/generic/spring-mock-mvc-2.3.4-dist.zip spring-mock-mvc] module as well. Extract the distribution zip file and put the jar files in your class-path.

= Static imports =
       
In order to use REST assured effectively it's recommended to statically import methods from the following classes:

  * `com.jayway.restassured.RestAssured.*`
  * `com.jayway.restassured.matcher.RestAssuredMatchers.*`
  * `org.hamcrest.Matchers.*`

If you want to use [http://json-schema.org/ Json Schema] validation you should also statically import these methods:
  * `com.jayway.restassured.module.jsv.JsonSchemaValidator.*`
Refer to [#JSON_Schema_validation Json Schema Validation] section for more info.

If you're using Spring MVC you can use the [Usage#Spring_Mock_Mvc_Module spring-mock-mvc] module to unit test your Spring Controllers using the Rest Assured DSL. To do this statically import the methods from [http://rest-assured.googlecode.com/svn/tags/2.3.4/apidocs/com/jayway/restassured/module/mockmvc/RestAssuredMockMvc.html RestAssuredMockMvc] _instead_ of importing the methods from `com.jayway.restassured.RestAssured` and `com.jayway.restassured.matcher.RestAssuredMatchers`:
  * `com.jayway.restassured.module.mockmvc.RestAssuredMockMvc.*`
  * `com.jayway.restassured.matcher.RestAssuredMatchers.*`

= Documentation =
When you've successfully downloaded and configured REST Assured in your classpath please refer to the [Usage user guide] for examples.